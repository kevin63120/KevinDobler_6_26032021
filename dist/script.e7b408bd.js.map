{"version":3,"sources":["scriptsJS/photographers.js","scriptsJS/script.js"],"names":["Profil","photographer","name","id","city","country","tags","tagline","price","portrait","rootElement","article","appendChild","document","createElement","map","tag","rootPhoto","card","join","classList","add","innerHTML","containerArticle","querySelector","fetch","then","response","json","data","photographers","pictures","media","forEach","createProfilStructure","console","log"],"mappings":";;ACAA;;AAGA;AACA,IAAMuB,gBAAgB,GAAGV,QAAQ,CAACW,aAAT,CAAuB,oBAAvB,CAAzB,EAGA;AAGA;;AAGAC,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACM,UAACC,QAAD;AAAA,SAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,CADN,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AAEV,MAAMC,aAAa,GAAGD,IAAI,CAACC,aAA3B;AACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,KAAtB;ADlBJ,ACoBIF,EAAAA,aAAa,CAACG,OAAd,CAAsB,UAAAhC,YAAY,EAAI;AAElC,IDpBKD,ICoBDA,qBAAJ,CAAWC,YAAX,EAAyBiC,qBAAzB,CAA+CX,gBAA/C;ADnBJ,ACsBIY,IAAAA,OAAO,CAACC,GAAR,CAAYpC,EDtBFC,YAAd,EAA2B,KCsBvB;ADtBuB,ACwBzB,GAPF;AASC,CAhBL;ADTQ,SAAKC,IAAL,GAAYD,YAAY,CAACC,IAAzB;AACA,SAAKC,EAAL,GAAUF,YAAY,CAACE,EAAvB;AACA,SAAKC,IAAL,GAAYH,YAAY,CAACG,IAAzB;AACA,SAAKC,OAAL,GAAeJ,YAAY,CAACI,OAA5B;AACA,SAAKC,IAAL,GAAYL,YAAY,CAACK,IAAzB;AACA,SAAKC,OAAL,GAAeN,YAAY,CAACM,OAA5B;AACA,SAAKC,KAAL,GAAaP,YAAY,CAACO,KAA1B;AACA,SAAKC,QAAL,GAAgBR,YAAY,CAACQ,QAA7B;AAEH;;;;WAED,+BAAuBC,WAAvB,EAAmC;AACnC,UAAMC,OAAO,GAAGD,WAAW,CAACE,WAAZ,CAAwBC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAxB,CAAhB;AAEA,UAAMR,IAAI,GAAG,KAAKA,IAAL,CAAUS,GAAV,CAAc,UAAAC,GAAG,EAAE;AAC5B,qEAAoDA,GAApD;AACH,OAFY,CAAb;AAIA,UAAMC,SAAS,GAAE,yCAAjB;AAEA,UAAMC,IAAI,+IAEiCD,SAAS,GAAG,KAAKf,IAFlD,6EAGiB,KAAKA,IAHtB,+HAM+B,KAAKE,IANpC,SAM2C,KAAKC,OAAL,GAAe,MAAM,KAAKA,OAA1B,GAAoC,EAN/E,wEAOuC,KAAKE,OAP5C,oEAQkC,KAAKC,KARvC,iLAYEF,IAAI,CAACa,IAAL,CAAU,EAAV,CAZF,2CAAV;AAiBER,MAAAA,OAAO,CAACS,SAAR,CAAkBC,GAAlB,CAAsB,+BAAtB;AACAV,MAAAA,OAAO,CAACW,SAAR,GAAmBJ,IAAnB;AAED","file":"script.e7b408bd.js","sourceRoot":"..","sourcesContent":["//creation de function de creation de profil\r\n\r\nexport class Profil{\r\n    constructor  (photographer){\r\n        this.name = photographer.name;\r\n        this.id = photographer.id;\r\n        this.city = photographer.city;\r\n        this.country = photographer.country;\r\n        this.tags = photographer.tags;\r\n        this.tagline = photographer.tagline;\r\n        this.price = photographer.price;\r\n        this.portrait = photographer.portrait;\r\n        \r\n    }    \r\n\r\n    createProfilStructure (rootElement){\r\n    const article = rootElement.appendChild(document.createElement(\"article\"));\r\n\r\n    const tags = this.tags.map(tag=>{\r\n        return `<li class=\"photograph_tag-item personal\">#${tag}</li>`\r\n    })\r\n\r\n    const rootPhoto ='Sample Photos\\Photographers ID Photos\\'';\r\n\r\n    const card = `\r\n        <a class=\"link_photographer-page\"href=\"/photographers_pages.html\">\r\n            <img class=\"profil_picture\" src=\"${rootPhoto + this.name}.jpg\" alt=\"photo de profil\">\r\n            <h2 class=\"name\">${this.name}</h2>\r\n        </a>\r\n        <div class=\"photograph_description\">\r\n            <p class=\"photograph_location\">${this.city}${this.country?  ',' + this.country : '' }</p>\r\n            <p class=\"photograph_description-text\">${this.tagline}</p> \r\n            <p class=\"photograph_pricePerDay\">${this.price}</p>  \r\n        </div>\r\n        <footer class=\"photograph_tag\">\r\n            <ul aria-label=\"photograph_tag-list\" class=\"photograph_tag-list\">\r\n              ${tags.join('')}\r\n            </ul>\r\n        </footer>`\r\n      \r\n      \r\n      article.classList.add(\"container_photographs_profils\");\r\n      article.innerHTML=(card);\r\n      \r\n    }\r\n    \r\n}","import { Profil } from \"./photographers\";\r\n\r\n\r\n// retrieved an items in the DOM for photograph card\r\nconst containerArticle = document.querySelector(\".article-container\");\r\n\r\n\r\n//let gars = new Profils(\"aaaaaaa\");\r\n\r\n\r\n//dataProfil(photographName,gars.name)\r\n\r\n\r\nfetch(\"/data-profils/data-photographers.json\")\r\n.then((response) => response.json())\r\n.then(data => {\r\n        \r\n    const photographers = data.photographers;\r\n    const pictures = data.media;\r\n        \r\n    photographers.forEach(photographer => {\r\n     \r\n        new Profil(photographer).createProfilStructure(containerArticle);\r\n\r\n        \r\n        console.log(Profil)\r\n    \r\n     }); \r\n      \r\n    });\r\n\r\n "]}